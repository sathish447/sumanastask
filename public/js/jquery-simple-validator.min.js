! function t(e, a, r) {
    function n(u, o) {
        if (!a[u]) {

            if (!e[u]) {

                var l = "function" == typeof require && require;
                if (!o && l) return l(u, !0);
                if (i) return i(u, !0);
                // alert("ww");
                var f = new Error("Cannot find module '" + u + "'");
                throw f.code = "MODULE_NOT_FOUND", f
            }
            var d = a[u] = {

                exports: {}
            };
            e[u][0].call(d.exports, function (t) {
                var a = e[u][1][t];
                return n(a || t)
            }, d, d.exports, t, e, a, r)
        }
        // alert(a[u].exports);
        return a[u].exports
    }
    for (var i = "function" == typeof require && require, u = 0; u < r.length; u++) n(r[u]);
    return n
}({
    1: [function (t, e, a) {

        "use strict";
        var r = t("./validator");
        if ("undefined" == typeof jQuery) throw new Error("jQuery Simple Validator 1.0.0 requires jQuery 3.3.1 or higher");
        $(function () {

            (0, r.validateForms)()
        })
    }, {
        "./validator": 3
    }],
    2: [function (t, e, a) {
        "use strict";

        function r(t) {
            return t.endsWith("kb") ? 1024 * parseInt(t) : t.endsWith("mb") ? 1024 * parseInt(t) * 1024 : t.endsWith("gb") ? 1024 * parseInt(t) * 1024 * 1024 : void 0
        }
        Object.defineProperty(a, "__esModule", {
            value: !0
        });
        var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
            return typeof t
        } : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        };
        a.validationFn = {
            required: function (t) {

                return !!t.value
            },
            fd: function (t) {

                return !!t.value
            },
            st: function (t) {

                return !!t.value
            },

            email1: function (t) {
				
                return !!/^(?=[0-9]*[a-zA-Z].)+([.\-_]?[a-zA-Z\d])*@\w+([-.]\w+)*\.(in|com|co\.(in|uk|us)|org|net|in\?{2,5})$/.test(t.value)

                // return !!/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(t.value)

            },
            url: function (t) {
                return !!/^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/.test(t.value)
            },
            zip: function (t) {
                return !!/^[1-9][0-9]{5}$/.test(t.value)



            },
            password2: function (t) {
                var k = (t.value);
                // alert(k);
				  return !!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!"#$%&'()*+,-.:;<=>?@[\]^_`{|}~])[A-Za-z\d!"#$%&'()*+,-.:;<=>?@[\]^_`{|}~]{8,12}$/.test(t.value)
                // return !!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,12}$/.test(t.value)


            },
            name: function (t) {
                var l = (t.value).length;

                if (l >= 3) {
                    return true
                }
                else {
                    return false
                }
            },

            password1: function (t) {
                var pwd = $('#pwd').val();
                var k = (t.value);
                // alert(k);
                //alert(pwd);
                if (pwd == k) {

                    return true
                } else {
                    return false
                }


            },


            door: function (t) {
                return !!/^(?!.*?[ '-/_;]{2})[A-Za-z0-9_;{/}-]*$/.test(t.value)

            },
            address: function (t) {
                return !!/^(?!.*?[ ',-/]{2})((?=.*[a-z])|(?=.*[A-Z]))(?=[0-9]*[a-zA-Z.,/].)+([.\-_]?[0-9a-zA-Z.,/\d])*/.test(t.value)

            },
            city: function (t) {
                return !!/^(?!.*?[ ',-/]{2})((?=.*[a-z])|(?=.*[A-Z]))(?=[0-9]*[a-zA-Z.,/].)+([.\-_]?[0-9a-zA-Z.,/\d])*/.test(t.value)

            },
            mobile: function (t) {
                return !!/^([+][9][1]|[9][1]|[0]){0,1}([6-9]{1})([0-9]{9})$/.test(t.value)
            },
            price: function (t) {
                return !!/^([+][9][1]|[9][1]|[0]){0,1}([6-9]{1})([0-9]{9})$/.test(t.value)
            },
            pattern: function (t) {
                return !!new RegExp($(t.input).attr("pattern")).test(t.value)
            },
            match: function (t) {
                return $($(t.input).attr("data-match-field")).prop(t.property) == t.value
            },
            fileTypes: function (t) {
                var e = t.input.files,
                 a = $(t.input).attr("data-file-types").split(","),
                 r = !1;
                return Object.values(e).forEach(function (t) {
                    "object" != (void 0 === t ? "undefined" : n(t)) || (r = a.find(function (e) {
                        return t.type == e
                    }))
                }), r
            },
            fileMaxSize: function (t) {
                var e = t.input.files,
                 a = $(t.input).attr("data-file-max-size").toLowerCase(),
                 i = 0,
                 u = !0;
                return i = r(a), Object.values(e).forEach(function (t) {
                    "object" == (void 0 === t ? "undefined" : n(t)) && t.size > i && (u = !1)
                }), u
            },
            fileMinSize: function (t) {
                var e = t.input.files,
                 a = $(t.input).attr("data-file-min-size").toLowerCase(),
                 i = 0,
                 u = !0;
                return i = r(a), Object.values(e).forEach(function (t) {
                    "object" == (void 0 === t ? "undefined" : n(t)) && t.size < i && (u = !1)
                }), u
            },
            isNumber: function (t) {
                return !!$.isNumeric(t.value)
            },
            max: function (t) {
                var e = parseInt($(t.input).attr("max"));
                return t.value <= e
            },
            min: function (t) {
                var e = parseInt($(t.input).attr("min"));
                return t.value >= e
            },
            maxLength: function (t) {
                var e = parseInt($(t.input).attr("maxlength"));
                return t.value.length <= e
            },
            minLength: function (t) {
                var e = parseInt($(t.input).attr("minlength"));
                return t.value.length >= e
            }
        }
    }, {}],
    3: [function (t, e, a) {
        "use strict";
        Object.defineProperty(a, "__esModule", {
            value: !0
        }), a.validateForms = void 0;
        var r = t("./validations"),
         n = (a.validateForms = function () {
             $("form[validate=true]").toArray().forEach(function (t, e) {


                 $(t).attr("novalidate", !0), $(t).attr("data-uid", "form-" + e), n(t)
             })
         }, function (t) {
             var e = $(t).find("input, textarea, select").toArray();
             i(e), $(t).on("submit", function (t) {
                 var a = !1;
                 e.forEach(function (e) {

                     u(e) || (a || ($(e).focus(), a = !0), t.preventDefault())



                 })
             })
         }),
         i = function (t) {
             t.forEach(function (t, e) {
                 var a = $(t).parent("form").attr("data-uid"),
                  r = "blur";
                 $(t).attr("data-uid", a + "-field-" + e), "file" == $(t).attr("type") && (r = "change"), $(t).on(r, function (e) {
                     u(t)
                 })
             })
         },
         u = function (t) {
             var e = !0;
             if ($(t).attr("required") && (e = "selected" == $(t).attr("type") ? e ? o(t, "selected", r.validationFn.required, "You need to check this") : e : e ? o(t, "value", r.validationFn.required, "Please fill out this field") : e), "name" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.name, "Should enter minimum 3 character") : e), "password1" == $(t).attr("name") && (e = e ? o(t, "value", r.validationFn.password1, "Password's does not match") : e), "st" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.st, "Please fill out this field") : e), "fd" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.fd, "Please fill out this field") : e), "password2" == $(t).attr("name") && (e = e ? o(t, "value", r.validationFn.password2, "Password must contain  Minimum eight and maximum 12 characters, at least one uppercase letter, one lowercase letter, one number and one special character:") : e), "email1" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.email1, "Not a valid emailid") : e), "address" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.address, "Not a valid street name") : e), "city" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.city, "Not a valid city name") : e), "zip" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.zip, "Not a valid pincode") : e), "url" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.url, "The url is invalid") : e), "mobile" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.mobile, "Not a valid phone number") : e), "door" == $(t).attr("type") && (e = e ? o(t, "value", r.validationFn.door, "Not a valid doorno") : e), $(t).attr("pattern") && (e = e ? o(t, "value", r.validationFn.pattern, "Please match the requested pattern") : e), $(t).attr("data-match-field") && (e = e ? o(t, "value", r.validationFn.match, $(t).attr("data-match") + " fields does not match") : e), "file" == $(t).attr("type")) {

             }
             return e

         },
         o = function (t, e, a, r) {

             var n = l(t);
             return r = $(t).attr("data-error") || r, a({

                 input: t,
                 property: e,
                 value: $(t).prop(e)
             }) ? ($(t).addClass("no-error"), $(t).removeClass("error"), n.remove(), !0) : ($(t).addClass("error"), $(t).removeClass("no-error"), n.innerHTML = r, !1)
         },
         l = function (t) {

             var e = $(t).attr("data-uid") + "-error",
              a = void 0;

             return 0 == $("#" + e).length ? ((a = document.createElement("div")).setAttribute("id", e), a.className = "error-field", $(t).after(a)) : a = document.getElementById(e), a
         }
    }, {
        "./validations": 2
    }]
}, {}, [1]);



$(function () {
    $('.blocksp').keyup(function () {
        var yourInput = $(this).val();
        re = /[~`!@@#$%^&*()|+=?:'".<>\{\}\[\]]/gi;
        var isSplChar = re.test(yourInput);
        if (isSplChar) {
            var no_spl_char = yourInput.replace(/[~`!@@#$%^&*()|+=?:'".<>\{\}\[\]]/gi, '');
            $(this).val(no_spl_char);
        }
    });

});




var inputFieldCaretPos = 0;
var lastCharacterWasGood = true;
function RemoveSpaces(element) {
    var text = element.value;
    //   alert("work");
    // Replace globally all multiple spaces with just on space
    var changed = text.replace(/[ ]+/g, " ");
    if (changed != text) {
        // We have to remember where the cursor was as setting the input.value
        // will place the cursor at the end of the text
        element.value = changed;
        SetCaretPosition(element, inputFieldCaretPos);
    }
    else {
        RememberCaretPos(element);
    }
}

function RememberCaretPos(event) {
    var myEvent = {
        exampl: function (e) {

            console.log(window.event);
            console.log(e);

            //check if we have "e" or "window.event" and use them as "evt"
            var evt = e || window.event

        }
    }
    //var myEvent = window.event;
    var keyCode
    if (myEvent.which) {
        keyCode = myEvent.which;
    }
    else if (myEvent.keyCode) {
        keyCode = myEvent.keyCode;
    }
    if (keyCode != 32 || lastCharacterWasGood) {
        inputFieldCaretPos = getSelectionStart(event) + 0;
        lastCharacterWasGood = (keyCode != 32);
    }
    else
        lastCharacterWasGood = false;
}

function getSelectionStart(elem) {
    if (elem.createTextRange) {
        var r = document.selection.createRange().duplicate()
        r.moveEnd('character', elem.value.length)
        if (r.text == '')
            return elem.value.length
        return elem.value.lastIndexOf(r.text)
    }
    else {
        return elem.selectionStart
    }
}

function SetCaretPosition(elem, position) {
    SetRangeSelection(elem, position, position);
}

function SetRangeSelection(element, start, end) {
    if (element.setSelectionRange) {
        element.focus();
        element.setSelectionRange(start, end);
    }
    else if (element.createTextRange) {
        var range = element.createTextRange();
        range.collapse(true);
        range.moveEnd('character', end);
        range.moveStart('character', start);
        range.select();
    }
}
/*$('.noOnly').keydown(function (e) {
    if (e.keyCode == 116 && e.ctrlKey) {
        return;
    }
    //if (e.keyCode == 13) {
    //    return;
    //}
    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
        // Allow: Ctrl+A, Command+A

     (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
        // Allow: home, end, left, right, down, up
     (e.keyCode >= 35 && e.keyCode <= 40)) {
        // let it happen, don't do anything
        return;
    }
    // Ensure that it is a number and stop the keypress
    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {

        e.preventDefault();
    }

});*/

function handlepaste(elem, e, name1, id) {
    var nam = name1;
    var id = id;

    clipboardData = e.clipboardData || window.clipboardData;
    pastedData = clipboardData.getData('Text');
    //alert(pastedData);
    var savedcontent = elem.innerHTML;
    if (e && e.clipboardData && e.clipboardData.getData) {// Webkit - get data from clipboard, put into editdiv, cleanup, then cancel event
        //alert(/text\/html/.test(e.clipboardData.type));
        //alert(/text\/plain/.test(e.clipboardData.types));

        if (/text\/html/.test(e.clipboardData.types)) {
 elem.innerHTML = e.clipboardData.getData('text/html');

        }
        else if (/text\/plain/.test(e.clipboardData.types)) {

            elem.innerHTML = e.clipboardData.getData('text/plain');
        }
        else {
            elem.innerHTML = "";
        }
        waitforpastedata(elem, savedcontent, nam, id);
        if (e.preventDefault) {
            // e.stopPropagation();
            e.preventDefault();
        }
        return false;
    }
    else {// Everything else - empty editdiv and allow browser to paste content into it, then cleanup
        elem.innerHTML = "";
        waitforpastedata(elem, savedcontent, nam, id);
        return true;
    }
}

function waitforpastedata(elem, savedcontent, nam, id) {
    var nam1 = nam;
    var id1 = id;

    if (elem.childNodes && elem.childNodes.length > 0) {
        //alert(elem.childNodes );
        processpaste(elem, savedcontent, nam1, id1);
    }
    else {
        that = {
            e: elem,
            s: savedcontent,
            n: nam,
            i: id1
        }
        that.callself = function () {
            waitforpastedata(that.e, that.s, that.n, that.i)
        }
        setTimeout(that.callself, 20);
    }
}

function processpaste(elem, savedcontent, nam1, id) {
    //alert(id);

    pasteddata = pastedData;
    // elem.innerHTML = savedcontent;
    if (nam1 == "name") {

        var res1 = pasteddata.match(/^[A-Za-z\s]+$/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res1 == pasteddata) {
            document.getElementById(id).value = res1;
        }
    }
    if (nam1 == "email") {

        var res = pasteddata.match(/^(?=[0-9]*[a-zA-Z].)+([.\-_]?[a-zA-Z\d])*@\w+([-.]\w+)*\.(in|com|co\.(in|uk|us)|org|net|in\?{2,5})$/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res == pasteddata) {
            document.getElementById(id).value = res;
        }
    }

    if (nam1 == "street") {

        var res = pasteddata.match(/^(?!.*?[ ',-/]{2})((?=.*[a-z])|(?=.*[A-Z]))(?=[0-9]*[a-zA-Z.,/].)+([.\-_]?[0-9a-zA-Z.,/\d])*/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res == pasteddata) {
            document.getElementById(id).value = res;
        }
    }
    if (nam1 == "door") {

        var res = pasteddata.match(/^(?!.*?[ '-/_,;]{2})[A-Za-z0-9_,;{/}-]*$/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res == pasteddata) {
            document.getElementById(id).value = res;
        }
    }

    if (nam1 == "mobile") {

        var res = pasteddata.match(/^([6-9]{1})([0-9]{9})$/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res == pasteddata) {
            document.getElementById(id).value = res;
        }
    }

    if (nam1 == "price") {

        var res = pasteddata.match(/^([6-9.]{1})([0-9.]{9})$/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res == pasteddata) {
            document.getElementById(id).value = res;
        }
    }

 if (nam1 == "order") {

        var res1 = pasteddata.match(/^[A-Za-z0-9]+$/g);
        //^^Alternatively loop through dom (elem.childNodes or elem.getElementsByTagName) here


        if (res1 == pasteddata) {
            document.getElementById(id).value = res1;
        }
    }
}

//var getKeyCode = function (str) {
//    return str.charCodeAt(str.length - 1);
//}
//document.getElementById("TxtFname").onkeyup = function (e) {
//    var kCd = e.keyCode || e.which;
//    if (kCd == 0 || kCd == 229) { //for android chrome keycode fix
//        kCd = getKeyCode(this.value);
//    }
//    var arr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ";
//    var code;
//    if (window.event)
//        code = e.keyCode;
//        //if (e.keyCode == 13) {
//        //    return;
//        //}
//    else
//        code = e.which;
//    var char = keychar = String.fromCharCode(code);

//    if (arr.indexOf(char) == -1)
//        return false;
//    alert(kCd)
//}

//document.getElementById("TxtFname").onkeyup = function (e) {
//    var kCd = e.keyCode || e.which;
//    if (kCd == 0 || kCd == 229) { //for android chrome keycode fix
//        kCd = getKeyCode(this.value);
//    }
//    alert("ww" + kCd)
//    var arr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ";
//    var code;
//    if (window.event) {
//        code = kCd;

//    }
//    if (e.keyCode == 32) {
//        alert(e.keyCode);
//        e.preventDefault();
//        }
//    else

//        code = kCd;
//    alert(code);
//    var char = keychar = String.fromCharCode(code);
//    alert(char);
//    if (arr.indexOf(char) == -1) {
//        $('#TxtFname').blur();
//    }
//}
$(".noOnly").on(
    "input change paste",
    function filterNumeric(event) {
	
        var formControl;

        formControl = $(event.target);
        formControl.val(formControl.val().replace(/[^0-9]+/g, ""));
    });
$(".txt").on(
    "input change paste",
    function Filtertext(event) {
        var formControl;

        formControl = $(event.target);
        formControl.val(formControl.val().replace(/[^A-Za-z\s]+/g, ""));
    });
//});
$('.txt1').keypress(function (e) {
    var regex = new RegExp("^[.a-zA-Z ]+$");
    if (e.keyCode === 46 && this.value.split('.').length === 2) {
        return false;
    }
    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
    if (regex.test(str)) {
        return true;
    }
    e.preventDefault();
    return false;
});
$(".txt1").on(
    "input change paste",
    function Filtertext(event) {
        var formControl;

        formControl = $(event.target);
        formControl.val(formControl.val().replace(/[^A-Za-z\s.]+/g, ""));
    });
$(".alpha").on(
    "input change paste",
    function Filteralpha(event) {
        var formControl;

        formControl = $(event.target);
        formControl.val(formControl.val().replace(/[^0-9a-zA-Z\s ]+/g, ""));
    });
$(".sp").on(
    "input change paste",
    function Filteremail(event) {
        var formControl;

        formControl = $(event.target);
        formControl.val(formControl.val().replace(/[\s]+/g, ""));
    });
	
function maxlength(elem, id) {
    var id1 = elem;
    var id = id;
    var inputEmail = id1;
    //alert(inputEmail);
    var max = document.getElementById(id).maxLength;
    inputEmail.onkeyup = function (e) {
        //var max = 5; // The maxlength you want

        if (inputEmail.value.length > max) {
            inputEmail.value = inputEmail.value.substring(0, max);
        }

    };
}
////function maxlength(elem, id) {
////    var id1 = id;
////    alert(id1);
////    //alert('hg');
////    var inputEmail = document.querySelector(id1);
////    alert(inputEmail);
////    inputEmail.onkeyup = function (e) {
////        var max = 5; // The maxlength you want

////        if (inputEmail.value.length > max) {
////            inputEmail.value = inputEmail.value.substring(0, max);
////        }

////    };
////}

//var inputEmail = document.querySelector('#gg');
//alert(inputEmail);
//inputEmail.onkeyup = function(e) {
//    var max = 5; // The maxlength you want
//    alert(inputEmail.value);
//    if(inputEmail.value.length > max) {
//        inputEmail.value = inputEmail.value.substring(0, max);
//    }
  
//};
//function max(id, maxl) {
//    var inputEmail = document.querySelector('#gg');

//    inputEmail.onkeyup = function (e) {
//        var max = 5; // The maxlength you want

//        if (inputEmail.value.length > max) {
//            inputEmail.value = inputEmail.value.substring(0, max);
//        }

//    };
//}
//function maxlength(elem, id) {
//    var id1 = id;
//    alert(id1);
//    //alert('hg');
//    var inputEmail = document.querySelector(id1);
//    alert(inputEmail);
//    inputEmail.onkeyup = function (e) {
//        var max = 5; // The maxlength you want

//        if (inputEmail.value.length > max) {
//            inputEmail.value = inputEmail.value.substring(0, max);
//        }

//    };
//}
//    var id = id;
//    var max = document.getElementById(id).maxLength;
//    var len = document.getElementById(id).value.length;
//    var val1 = document.getElementById(id).value;
   
//    if (len > max) {
//        val1 = val1.substring(0, max);
//                }
    //var inputEmail = document.querySelector('#id');
    //alert(inputEmail);
    //alert(x);
    //alert(id);

    

       
    

//$('input').on('change', function () {
   
//    var max = $(this).attr('maxlength'),
//        val = $(this).val(),
//        trimmed;

//    if (max && val) {
//        trimmed = val.substr(0, max);
//        $(this).val(trimmed);
//    }
//});
//$(".sp").on(
//    "input change paste",
//    function Filteremail(event) {
//        var formControl;

//        formControl = $(event.target);
//        formControl.val(formControl.val().replace(/[0-9a-zA-Z\s]+/g, ""));
//    });//$('.alpha').keypress(function (e) {
//    var regex = new RegExp("^[0-9a-zA-Z ]+$");
//    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
//    if (regex.test(str)) {
//        return true;
//    }
//    e.preventDefault();
//    return false;
//});
//$('.noOnly').keydown(function (e) {

//    //var getval = $(this).val();

//    // clipboardData = e.clipboardData || window.clipboardData;
//    // pastedData = clipboardData.getData('Text');
//    // //alert(pastedData);
//    //// alert(clipboardData);

//    if (e.keyCode == 116 && e.ctrlKey) {
//        return;
//    }
//    if (e.keyCode == 86 && e.ctrlKey) {
//        //alert();
//        //console.log($(this).val());
//        return;

//    }
//    if (e.keyCode == 13) {
//        return;
//    }
//    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
//        // Allow: Ctrl+A, Command+A

//     (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
//        // Allow: home, end, left, right, down, up
//     (e.keyCode >= 35 && e.keyCode <= 40)) {
//        // let it happen, don't do anything
//        return;
//    }
//    // Ensure that it is a number and stop the keypress
//    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {

//        e.preventDefault();
//    }

//});
//$(function () {
//$('.noOnly').keyup(function (e) {

//    //var getval = $(this).val();

//    // clipboardData = e.clipboardData || window.clipboardData;
//    // pastedData = clipboardData.getData('Text');
//    // //alert(pastedData);
//    //// alert(clipboardData);

//    if (e.keyCode == 116 && e.ctrlKey) {
//        return;
//    }
//    if (e.keyCode = 86 && e.ctrlKey) {
//        //alert();
//        //console.log($(this).val());
//        return;

//    }
//    if (e.keyCode == 13) {
//        return;
//    }
//    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
//        // Allow: Ctrl+A, Command+A

//     (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
//        // Allow: home, end, left, right, down, up
//     (e.keyCode >= 35 && e.keyCode <= 40)) {
//        // let it happen, don't do anything
//        return;
//    }
//    // Ensure that it is a number and stop the keypress
//    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {

//        e.preventDefault();
//    }

//});
//});
//$(".txt").keypress(function (e) {

//    var arr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz ";
//    var code;
//    if (window.event) {
//        code = e.keyCode;

//    }
//        //if (e.keyCode == 13) {
//        //    return;
//        //}
//    else

//        code = e.which;
//    alert(code);
//    var char = keychar = String.fromCharCode(code);

//    if (arr.indexOf(char) == -1)
//        return false;
//});


//$('.alpha').keyup(function (e) {
//    var regex = new RegExp("^[0-9a-zA-Z ]+$");
//    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
//    if (regex.test(str)) {
//        return true;
//    }
//    e.preventDefault();
//    return false;
//});
////$('.txt1').keypress(function (e) {
//    var regex = new RegExp("^[.a-zA-Z ]+$");
//    if (e.keyCode === 46 && this.value.split('.').length === 2) {
//        return false;
//    }
//    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
//    if (regex.test(str)) {
//        return true;
//    }
//    e.preventDefault();
//    return false;
//});

/*$('.space').keypress(function (e) {
    if (e.keyCode == 32) {
        // e.preventDefault();
        return false;
    }
});*/
//$('.txt1').keyup(function (e) {
//    var regex = new RegExp("^[.a-zA-Z ]+$");
//    if (e.keyCode === 46 && this.value.split('.').length === 2) {
//        return false;
//    }
//    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
//    if (regex.test(str)) {
//        return true;
//    }
//    e.preventDefault();
//    return false;
//});
//$(function () {
//    $('.sp').keyup(function (e) {

//    if (e.keyCode == 32) {

//        // e.preventDefault();
//        return false;
//    }
//});
//});
//$('.sp').keydown(function (e) {
//    if (e.keyCode == 32) {
//        // e.preventDefault();
//        return false;
//    }
//});


$("[type='number']").keypress(function (e) {
    e.preventDefault();
    //var charCode = e.keyCode || e.which;
    //if (e.keyCode == 8 || e.keyCode == 46) {
       
    //    return false;
    //}
    //else {

    //    return true;
    //}
});
/*Email Validation*/
function ValidEmail(pasteval) {
	//alert(pasteval);
    /*sl_email*/
    jQuery('.ValidEmail').on('keypress change keyup paste', function (e) {
		
		/*Get Input value*/
        var inputVal = jQuery(this).val();
        /*Regex code*/
		var characterReg = /^(?=[0-9]*[a-zA-Z].)+([.\-_]?[a-zA-Z\d])*@\w+([-.]\w+)*\.(in|com|co\.(in)|org|net|in\?{2,5})$/;
        /*Backspace and delete move,key*/
        if (e.keyCode == 8 || e.keyCode == 37 || e.keyCode == 39 || e.keyCode == 46 || e.keyCode == 116 || e.keyCode == 32) {  
			if (!characterReg.test(inputVal)) {jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success');} else {jQuery(this).addClass('validation_success'); jQuery(this).removeClass('validation_falied');}

		return true; 
		
		
		}
		/*Value regular testing*/
        
			if (!characterReg.test(inputVal)) {jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success');} else {jQuery(this).addClass('validation_success'); jQuery(this).removeClass('validation_falied');}
		
		var n = inputVal.indexOf("@");

        if (n > 0) {
            var result = inputVal.substr(n + 1);
            var lastElement = result.split('.');

            if (lastElement.length === 0) {
                console.log('error empty');
            } else {
				
				/*in*/
				var lastindexOf 	= inputVal.lastIndexOf('com');
				var getlastary 		= lastElement[1];
				var count_com =countElement("com",lastElement);
				var count_org =countElement("org",lastElement);
				var count_net =countElement("net",lastElement);
				var count_co =countElement("co",lastElement);
				var count_in =countElement("in",lastElement);
				if(count_com == 0 && count_org == 0 && count_net == 0 && count_co == 0){
					if(jQuery.inArray("in",lastElement)==-1){
						var getarraylength = lastElement[1].length;	
						var count_in =countElement("in",lastElement);					
						if(jQuery(this).hasClass("validation_falied")){			
							if(getarraylength >2){
								var remove=inputVal.slice(0,-1);
								jQuery(this).val(remove);
							}
						}					
					}else{
						var count=countElement("in",lastElement);
						if(count==1){
							var getarraylength 	= lastElement.length;
							var getlastary 		= lastElement;
							if(jQuery(this).hasClass("validation_falied")){
								var getarraylength = lastElement.length;
								if(count==1){

									if(getarraylength > 2){
										var remove=inputVal.slice(0,-1);
										jQuery(this).val(remove);
										jQuery(this).addClass('validation_success');	
									}
								}
							}
						}else if(count>1){
							var remove=inputVal.slice(0,-3);
							jQuery(this).val(remove);jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success')
						}
					}		
				}				
				/*com*/
				if(count_in == 0 && count_org == 0 && count_net == 0 && count_co == 0){
					if(jQuery.inArray("com",lastElement)==-1){
						var getarraylength = lastElement[1].length;	
						console.log(getarraylength +'.veeracom');
						if(jQuery(this).hasClass("validation_falied")){															
							if(getarraylength > 3){
								var remove=inputVal.slice(0,-1);
								jQuery(this).val(remove);	
							}	
						}				
					}else{
						var count1 =countElement("com",lastElement);
						if(count1==1){
							var getarraylength = lastElement[2].length;
							if(jQuery(this).hasClass("validation_falied")){
								var getarraylength 	= lastElement.length;
								if(count1==1){
									if(getarraylength => 3){
										console.log(getarraylength+'veera1');
										var remove=inputVal.slice(0,-1);
										jQuery(this).val(remove);
										jQuery(this).addClass('validation_success');
									}
								}
							}
						}else if(count1>1){
							var remove=inputVal.slice(0,-3);
							jQuery(this).val(remove);jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success')
						}
					}
				}
				/*org*/
				if(count_com == 0 && count_in == 0 && count_net == 0 && count_co == 0){
					if(jQuery.inArray("org",lastElement)==-1){
						var getarraylength = lastElement[1].length;	
						console.log(getarraylength +'.veeracom');
						if(jQuery(this).hasClass("validation_falied")){															
							if(getarraylength > 3){
								var remove=inputVal.slice(0,-1);
								jQuery(this).val(remove);	
							}	
						}				
					}else{
						var count1 =countElement("org",lastElement);
						if(count1==1){
							var getarraylength = lastElement[2].length;
							if(jQuery(this).hasClass("validation_falied")){
								var getarraylength 	= lastElement.length;
								if(count1==1){
									if(getarraylength => 3){
										console.log(getarraylength+'veera1');
										var remove=inputVal.slice(0,-1);
										jQuery(this).val(remove);
										jQuery(this).addClass('validation_success');
									}
								}
							}
						}else if(count1>1){
							var remove=inputVal.slice(0,-3);
							jQuery(this).val(remove);jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success')
						}
					}
				}
				
				/*net*/
				if(count_com == 0 && count_in == 0 && count_org == 0 && count_co == 0){
					if(jQuery.inArray("net",lastElement)==-1){
						var getarraylength = lastElement[1].length;	
						console.log(getarraylength +'.veeracom');
						if(jQuery(this).hasClass("validation_falied")){															
							if(getarraylength > 3){
								var remove=inputVal.slice(0,-1);
								jQuery(this).val(remove);	
							}	
						}				
					}else{
						var count1 =countElement("net",lastElement);
						if(count1==1){
							var getarraylength = lastElement[2].length;
							if(jQuery(this).hasClass("validation_falied")){
								var getarraylength 	= lastElement.length;
								if(count1==1){
									if(getarraylength => 3){
										console.log(getarraylength+'veera1');
										var remove=inputVal.slice(0,-1);
										jQuery(this).val(remove);
										jQuery(this).addClass('validation_success');
									}
								}
							}
						}else if(count1>1){
							var remove=inputVal.slice(0,-3);
							jQuery(this).val(remove);jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success')
						}
					}
				}

								
				
				/*co.in*/
                var array1 = ["co","in"];
                var co_in_value = containsAll(array1,lastElement);
									var count =countElement("co",lastElement);
					var count_in =countElement("in",lastElement);
					var getarraylength = lastElement[2].length;
	
					if(getarraylength > 2){
						var remove=inputVal.slice(0,-1);
						jQuery(this).val(remove);
						jQuery(this).addClass('validation_success');
					}
					
					console.log(getarraylength);
                if(co_in_value == true){

						if(count_in >1){
							var remove=inputVal.slice(0,-3);
							jQuery(this).val(remove);jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success')
						}
						if(count_in == 1){
						if(count > 1){
								var remove=inputVal.slice(0,-3);
								jQuery(this).val(remove);jQuery(this).addClass('validation_falied');jQuery(this).removeClass('validation_success')
							}
						}						
						console.log('tsett');
						var count_in =countElement("in",lastElement);
                } else {
					if(count==1){
						var getarraylength = lastElement[2].length;
						
						if(getarraylength >2){
							var remove=inputVal.slice(0,-1);
							jQuery(this).val(remove)
							
						
						}
					}			
                }
            }/*Lastelement length check end*/
        } /*Count @ end*/
    });
}

function countElement(item,array) {
    var count = 0;
    jQuery.each(array, function(i,v) { if (v === item) count++; });
    return count;
}
function containsAll(needles, haystack){ 
  for(var i = 0 , len = needles.length; i < len; i++){
     if(jQuery.inArray(needles[i], haystack) == -1) return false;
  }
  return true;
}